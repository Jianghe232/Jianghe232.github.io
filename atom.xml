<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jianghe&#39;s Blog</title>
  
  <subtitle>Hello World!</subtitle>
  <link href="https://example.com/atom.xml" rel="self"/>
  
  <link href="https://example.com/"/>
  <updated>2021-07-14T13:33:26.104Z</updated>
  <id>https://example.com/</id>
  
  <author>
    <name>Jianghe232</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python基础04</title>
    <link href="https://example.com/2021/07/python-ji-chu-04/"/>
    <id>https://example.com/2021/07/python-ji-chu-04/</id>
    <published>2021-07-10T09:05:51.000Z</published>
    <updated>2021-07-14T13:33:26.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="1-列表"><a href="#1-列表" class="headerlink" title="1. 列表"></a>1. 列表</h3><p>中括号之间的一列逗号分割的值，列表的元素不必是同一类型。</p><ul><li><p>使用列表的 append(*) 方法可以添加元素到列表末尾</p>  <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用 insert() 方法，插入元素到列表中</p>  <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 在列表索引 0 位置添加元素 1</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'x'</span><span class="token punctuation">)</span> <span class="token comment"># 在列表索引 1 位置添加元素 x</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用方法 count(x) 会返回列表中元素 x 的数量</p>  <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>使用 remove()方法可以移除列表中任意指定值</p>  <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a  <span class="token comment"># 可以发现 remove() 只移除了找到的第一个 1</span><span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用 reverse() 反转整个列表</p>  <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'x'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用 extend() 将一个列表所有元素添加到另一个列表的末尾</p>  <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> a <span class="token operator">+</span> b  <span class="token comment"># 列表拼接</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment"># 使用列表方法 extend()</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用 sort() 方法，给列表排序（前提是列表的元素是可比较的）</p>  <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span> Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>TypeError<span class="token punctuation">:</span> <span class="token string">'&lt;'</span> <span class="token keyword">not</span> supported between instances of <span class="token string">'str'</span> <span class="token keyword">and</span> <span class="token string">'int'</span><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用 del 关键字 删除指定位置的列表元素</p>  <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">del</span> a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># 也可以删除位置 0 的元素</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># 这样不能删除</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="将列表用作栈和队列"><a href="#将列表用作栈和队列" class="headerlink" title="将列表用作栈和队列"></a>将列表用作栈和队列</h4><ul><li><p>栈是我们通常所说的一种 <em>LIFO</em> （Last In First Out 后进先出）数据结构。它的意思是最后进入的数据第一个出来。一个最简单的例子往一端封闭的管道放入一些弹珠然后取出来，如果你想把弹珠取出来，你必须从你最后放入弹珠的位置挨个拿出来。用代码实现此原理：</p>  <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 列表方法 pop()，弹出列表最后一个元素 ，传入参数 i ，会将第 i 个元素弹出</span><span class="token number">6</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token number">5</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token number">4</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token number">3</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><em>队列</em> 是一种在末尾追加数据以及在开始弹出数据的数据结构。与栈不同，它是 <em>FIFO</em> （First In First Out 先进先出）的数据结构：</p>  <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 使用a.pop(0)弹出列表中的第一个元素</span><span class="token number">1</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token number">2</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h4><p>列表推导式为从序列中创建列表提供了一个简单的方法。如果没有列表推导式，一般都是这样创建列表的：通过将一些操作应用于序列的每个成员并通过返回的元素创建列表，或者通过满足特定条件的元素创建子序列。</p><p>假设我们创建一个 squares 列表，可以像下面这样创建。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> squares <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     squares<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> squares<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这个 for 循环中的被创建（或被重写）的名为  <code>x</code> 的变量在循环完毕后依然存在。使用如下方法，我们可以计算 squares 的值而不会产生任何的副作用：。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">squares <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>等价于下面的列表推导式。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">squares <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token operator">**</span><span class="token number">2</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面这个方法更加简明且易读。</p><p>列表推导式由包含一个表达式的中括号组成，表达式后面跟随一个  for 子句，之后可以有零或多个  for 或  if 子句。结果是一个列表，由表达式依据其后面的 for 和  if 子句上下文计算而来的结果构成。</p><p>例如，如下的列表推导式结合两个列表的元素，如果元素之间不相等的话：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token keyword">if</span> x <span class="token operator">!=</span> y<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>等同于：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> combs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         <span class="token keyword">if</span> x <span class="token operator">!=</span> y<span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             combs<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> combs<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>值得注意的是在上面两个方法中的 for 和 if 语句的顺序。</p><p>列表推导式也可以嵌套。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> z <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token operator">+</span> <span class="token number">1</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token punctuation">[</span>x <span class="token operator">**</span> <span class="token number">2</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> z<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-元组"><a href="#3-元组" class="headerlink" title="3. 元组"></a>3. 元组</h3><p>元组是由数个 逗号分割的值组成,元组是不可变类型，这意味着你不能在元组内删除或添加或编辑任何值。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token string">'Fedora'</span><span class="token punctuation">,</span> <span class="token string">'ShiYanLou'</span><span class="token punctuation">,</span> <span class="token string">'Kubuntu'</span><span class="token punctuation">,</span> <span class="token string">'Pardus'</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">(</span><span class="token string">'Fedora'</span><span class="token punctuation">,</span> <span class="token string">'ShiYanLou'</span><span class="token punctuation">,</span> <span class="token string">'Kubuntu'</span><span class="token punctuation">,</span> <span class="token string">'Pardus'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token string">'ShiYanLou'</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> x <span class="token keyword">in</span> a<span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>Fedora ShiYanLou Kubuntu Pardus<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将元组拆封并赋值给多个变量：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d <span class="token operator">=</span> a <span class="token comment"># 利用元组给多个变量赋值</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token number">1</span><span class="token operator">>></span><span class="token operator">></span> c<span class="token string">'x'</span><span class="token operator">>></span><span class="token operator">></span> d<span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>要创建只含有一个元素的元组，在值后面跟一个逗号:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token number">123</span><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'int'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> b <span class="token operator">=</span> <span class="token number">321</span><span class="token punctuation">,</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">(</span><span class="token number">321</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'tuple'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">type</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'tuple'</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>通过内建函数 <code>type()</code> 你可以知道任意变量的数据类型。使用 <code>len()</code> 函数可以查询任意序列类型数据的长度。</p></blockquote><h3 id="4-集合"><a href="#4-集合" class="headerlink" title="4. 集合"></a>4. 集合</h3><p>集合是一个无序不重复元素的集。基本功能包括关系测试和消除重复元素。集合对象还支持 union（联合），intersection（交），difference（差）和 symmetric difference（对称差集）等数学运算。</p><p>大括号或 set() 函数可以用来创建集合。注意：想要创建空集合，你必须使用 set() 而不是 {}。后者用于创建空字典，我们在下一节中介绍的一种数据结构。</p><p>集合的常见操作：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> basket <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'apple'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'apple'</span><span class="token punctuation">,</span> <span class="token string">'pear'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>basket<span class="token punctuation">)</span>                      <span class="token comment"># 你可以看到重复的元素被去除</span><span class="token punctuation">&#123;</span><span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'pear'</span><span class="token punctuation">,</span> <span class="token string">'apple'</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> <span class="token string">'orange'</span> <span class="token keyword">in</span> basket<span class="token boolean">True</span><span class="token operator">>></span><span class="token operator">></span> <span class="token string">'crabgrass'</span> <span class="token keyword">in</span> basket<span class="token boolean">False</span><span class="token operator">>></span><span class="token operator">></span> <span class="token comment"># 演示对两个单词中的字母进行集合操作</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">'abracadabra'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> b <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">'alacazam'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a                                  <span class="token comment"># a 去重后的字母</span><span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">-</span> b                              <span class="token comment"># a 有而 b 没有的字母</span><span class="token punctuation">&#123;</span><span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">|</span> b                              <span class="token comment"># 存在于 a 或 b 的字母</span><span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'m'</span><span class="token punctuation">,</span> <span class="token string">'z'</span><span class="token punctuation">,</span> <span class="token string">'l'</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">&amp;</span> b                              <span class="token comment"># a 和 b 都有的字母</span><span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">^</span> b                              <span class="token comment"># 存在于 a 或 b 但不同时存在的字母</span><span class="token punctuation">&#123;</span><span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'m'</span><span class="token punctuation">,</span> <span class="token string">'z'</span><span class="token punctuation">,</span> <span class="token string">'l'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从集合中添加或弹出元素：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'e'</span><span class="token punctuation">,</span><span class="token string">'h'</span><span class="token punctuation">,</span><span class="token string">'g'</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># pop 方法随机删除一个元素并打印</span><span class="token string">'h'</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">&#123;</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'e'</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-字典"><a href="#5-字典" class="headerlink" title="5. 字典"></a>5. 字典</h3><p>字典是无序的键值对（<code>key:value</code>）集合，同一个字典内的键必须是互不相同的。一对大括号 <code>&#123;&#125;</code> 创建一个空字典。初始化字典时，在大括号内放置一组逗号分隔的键：值对，这也是字典输出的方式。我们使用键来检索存储在字典中的数据。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'kushal'</span><span class="token punctuation">:</span><span class="token string">'Fedora'</span><span class="token punctuation">,</span> <span class="token string">'kart_'</span><span class="token punctuation">:</span><span class="token string">'Debian'</span><span class="token punctuation">,</span> <span class="token string">'Jace'</span><span class="token punctuation">:</span><span class="token string">'Mac'</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">&#123;</span><span class="token string">'kushal'</span><span class="token punctuation">:</span> <span class="token string">'Fedora'</span><span class="token punctuation">,</span> <span class="token string">'Jace'</span><span class="token punctuation">:</span> <span class="token string">'Mac'</span><span class="token punctuation">,</span> <span class="token string">'kart_'</span><span class="token punctuation">:</span> <span class="token string">'Debian'</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">[</span><span class="token string">'kart_'</span><span class="token punctuation">]</span><span class="token string">'Debian'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建新的键值对很简单：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">[</span><span class="token string">'parthan'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'Ubuntu'</span><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">&#123;</span><span class="token string">'kushal'</span><span class="token punctuation">:</span> <span class="token string">'Fedora'</span><span class="token punctuation">,</span> <span class="token string">'Jace'</span><span class="token punctuation">:</span> <span class="token string">'Mac'</span><span class="token punctuation">,</span> <span class="token string">'kart_'</span><span class="token punctuation">:</span> <span class="token string">'Debian'</span><span class="token punctuation">,</span> <span class="token string">'parthan'</span><span class="token punctuation">:</span> <span class="token string">'Ubuntu'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>使用 <code>del</code> 关键字删除任意指定的键值对：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">del</span> data<span class="token punctuation">[</span><span class="token string">'kushal'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">&#123;</span><span class="token string">'Jace'</span><span class="token punctuation">:</span> <span class="token string">'Mac'</span><span class="token punctuation">,</span> <span class="token string">'kart_'</span><span class="token punctuation">:</span> <span class="token string">'Debian'</span><span class="token punctuation">,</span> <span class="token string">'parthan'</span><span class="token punctuation">:</span> <span class="token string">'Ubuntu'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>使用 <code>in</code> 关键字查询指定的键是否存在于字典中。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token string">'ShiYanLou'</span> <span class="token keyword">in</span> data<span class="token boolean">False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>必须知道的是，字典中的键必须是不可变类型，比如你不能使用列表作为键。</p><p><code>dict()</code> 可以从包含键值对的元组中创建字典。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'Indian'</span><span class="token punctuation">,</span><span class="token string">'Delhi'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'Bangladesh'</span><span class="token punctuation">,</span><span class="token string">'Dhaka'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token string">'Indian'</span><span class="token punctuation">:</span> <span class="token string">'Delhi'</span><span class="token punctuation">,</span> <span class="token string">'Bangladesh'</span><span class="token punctuation">:</span> <span class="token string">'Dhaka'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果你想要遍历一个字典，使用字典的 <code>items()</code> 方法。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">&#123;</span><span class="token string">'Kushal'</span><span class="token punctuation">:</span> <span class="token string">'Fedora'</span><span class="token punctuation">,</span> <span class="token string">'Jace'</span><span class="token punctuation">:</span> <span class="token string">'Mac'</span><span class="token punctuation">,</span> <span class="token string">'kart_'</span><span class="token punctuation">:</span> <span class="token string">'Debian'</span><span class="token punctuation">,</span> <span class="token string">'parthan'</span><span class="token punctuation">:</span> <span class="token string">'Ubuntu'</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> x<span class="token punctuation">,</span> y <span class="token keyword">in</span> data<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;&#125; uses &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>Kushal uses FedoraJace uses Mackart_ uses Debianparthan uses Ubuntu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>许多时候我们需要往字典中的元素添加数据，我们首先要判断这个元素是否存在，不存在则创建一个默认值。如果在循环里执行这个操作，每次迭代都需要判断一次，降低程序性能。</p><p>我们可以使用 <code>dict.setdefault(key, default)</code> 更有效率的完成这个事情。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">'names'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'Ruby'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">&#123;</span><span class="token string">'names'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Ruby'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">'names'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'Python'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">&#123;</span><span class="token string">'names'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Ruby'</span><span class="token punctuation">,</span> <span class="token string">'Python'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">'names'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'C'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">&#123;</span><span class="token string">'names'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Ruby'</span><span class="token punctuation">,</span> <span class="token string">'Python'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>试图索引一个不存在的键将会抛出一个 <em>keyError</em> 错误。我们可以使用 <code>dict.get(key, default)</code> 来索引键，如果键不存在，那么返回指定的 default 值。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">[</span><span class="token string">'foo'</span><span class="token punctuation">]</span>Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>File <span class="token string">"&lt;stdin>"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">></span>KeyError<span class="token punctuation">:</span> <span class="token string">'foo'</span><span class="token operator">>></span><span class="token operator">></span> data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'foo'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果你想要在遍历列表（或任何序列类型）的同时获得元素索引值，你可以使用 <code>enumerate()</code>。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">0</span> a<span class="token number">1</span> b<span class="token number">2</span> c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你也许需要同时遍历两个序列类型，你可以使用 <code>zip()</code> 函数。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Pradeepto'</span><span class="token punctuation">,</span> <span class="token string">'Kushal'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'OpenSUSE'</span><span class="token punctuation">,</span> <span class="token string">'Fedora'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> x<span class="token punctuation">,</span> y <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;&#125; uses &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>Pradeepto uses OpenSUSEKushal uses Fedora<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数据结构&quot;&gt;&lt;a href=&quot;#数据结构&quot; class=&quot;headerlink&quot; title=&quot;数据结构&quot;&gt;&lt;/a&gt;数据结构&lt;/h2&gt;&lt;h3 id=&quot;1-列表&quot;&gt;&lt;a href=&quot;#1-列表&quot; class=&quot;headerlink&quot; title=&quot;1. 列表&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="Python" scheme="https://example.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python基础03</title>
    <link href="https://example.com/2021/07/python-ji-chu-03/"/>
    <id>https://example.com/2021/07/python-ji-chu-03/</id>
    <published>2021-07-10T09:05:25.000Z</published>
    <updated>2021-07-14T13:33:26.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>列表是 python 的一种数据结构，可以写作中括号之间的一列逗号分割的值，列表的元素不必是同一类型。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">232</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">'Fedora'</span><span class="token punctuation">,</span> <span class="token string">'Archlinux'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">232</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">'Fedora'</span><span class="token punctuation">,</span> <span class="token string">'Archlinux'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>列表中的元素编号从零开始，可以通过编号（称为索引）访问每一个元素的值：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token number">1</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>Fedora<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>列表的索引也可以为负数，表示从列表末尾计数：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>Archlinux<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>列表可以被切成不同部分（切片）：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">232</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">'Fedora'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token number">12</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>切片的索引有非常有用的默认值；省略的第一个索引默认为零，省略的第二个索引默认为列表元素个数:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">232</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'Fedora'</span><span class="token punctuation">,</span> <span class="token string">'Archlinux'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>切片的索引满足左开右闭原则，左边的值能取到，右边的值不能。</p><p>Python 能够优雅地处理那些没有意义的切片索引：一个过大的索引值(即大于列表实际长度)将被列表实际长度所代替，当上边界比下边界大时(即切片左值大于右值)就返回空列表:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span> <span class="token number">333</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'Fedora'</span><span class="token punctuation">,</span> <span class="token string">'Archlinux'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>切片操作还可设置步长：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token comment"># 从切片索引 1 到列表末尾，间隔一个元素取值</span><span class="token punctuation">[</span><span class="token number">232</span><span class="token punctuation">,</span> <span class="token string">'Fedora'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>列表支持连接这样的操作：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">232</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">'Fedora'</span><span class="token punctuation">,</span> <span class="token string">'Archlinux'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>列表允许修改元素：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span>  <span class="token comment"># 修改第 3 个元素(从零开始)</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token number">1</span> <span class="token punctuation">,</span><span class="token number">2</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">]</span> <span class="token comment"># 修改第 0, 1个元素</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment"># 移除第 0, 1 个元素</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># 清空列表</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>检查某个值是否存在于列表:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> h <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'hello'</span><span class="token punctuation">,</span> <span class="token string">'world'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token string">'hello'</span> <span class="token keyword">in</span> h<span class="token boolean">True</span><span class="token operator">>></span><span class="token operator">></span> <span class="token string">'Fedora'</span> <span class="token keyword">in</span> h<span class="token boolean">False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>检查列表是否为空：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> list_name<span class="token punctuation">:</span> <span class="token comment"># 列表不为空</span>    <span class="token keyword">pass</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span> <span class="token comment"># 列表不为空</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>列表是允许嵌套的:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> d <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> x <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> n<span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> x<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><h3 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> 表达式<span class="token punctuation">:</span>    内容<span class="token number">1</span>    内容<span class="token number">2</span>    cont<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>表达式为真，循环。</p><h3 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h3><p>python 中的 for 循环可以遍历任何序列（列表，字符串）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Hello'</span><span class="token punctuation">,</span> <span class="token string">'World'</span><span class="token punctuation">,</span> <span class="token string">'!'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> x <span class="token keyword">in</span> a<span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> HelloWorld!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们也可以这样做：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> x <span class="token keyword">in</span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token number">3</span><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>循环后面还可以添加 else 语句, 它会在循环结束后执行，除非有 break 语句终止了循环</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">else</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Bye bye"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span class="token number">4</span>Bye bye<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 如果需要一个数值序列，内置函数 range() 会很方便，它生成一个等差数列 （并不是列表）</p> <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span class="token number">4</span><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a    <span class="token comment"># range()返回的不是列表，而是一种1可迭代对象</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 通过 list() 转成列表</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="退出循环"><a href="#退出循环" class="headerlink" title="退出循环"></a>退出循环</h3><ul><li>break 完全退出循环</li><li>continue 跳过其后的代码，回到循环开始</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h2&gt;&lt;p&gt;列表是 python 的一种数据结构，可以写作中括号之间的一列逗号分割的值，列表的元素不必是同一类型。&lt;/p&gt;
&lt;pre class=&quot;li</summary>
      
    
    
    
    <category term="Python" scheme="https://example.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux文件权限管理</title>
    <link href="https://example.com/2021/07/linux-wen-jian-quan-xian-guan-li/"/>
    <id>https://example.com/2021/07/linux-wen-jian-quan-xian-guan-li/</id>
    <published>2021-07-07T14:23:35.000Z</published>
    <updated>2021-07-14T13:33:26.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="普通权限"><a href="#普通权限" class="headerlink" title="普通权限"></a>普通权限</h2><p>在 Linux 中使用 <code>ls -l</code> 命令可以查看一个文件的属性以及所属的用户和组：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ ls -l Blogdrwxr-xr-x  9 root root 4096  7月  6 11:46 Blog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p>第一个字符表示文件类型，实例中<code>Blog</code> 文件第一个属性是<code>d</code> ，表示它的文件类型是目录。Linux 中文件类型有：</p><table><thead><tr><th align="center">字符</th><th align="left">含义</th></tr></thead><tbody><tr><td align="center">-</td><td align="left">普通文件(纯文本文件，二进制文件，各种压缩文件)</td></tr><tr><td align="center">d</td><td align="left">目录文件(<code>Linux</code> 中一切皆文件，目录文件即<code>Windows</code>中的目录)</td></tr><tr><td align="center">c</td><td align="left">字符设备文件(串行端口的接口设备，如键盘、鼠标)</td></tr><tr><td align="center">b</td><td align="left">块设备文件(存储数据以供系统存取的接口设备，如硬盘)</td></tr><tr><td align="center">l</td><td align="left">链接文件(通过<code>ln -s</code>命令创建的软链接，类似Win下的快捷方式)</td></tr><tr><td align="center">s</td><td align="left">套接字文件(常用在网络数据连接，启动一个程序来监听客户端的要求，客户端就可以通过套接字来进行数据通信。)</td></tr><tr><td align="center">p</td><td align="left">管道文件 FIFO (特殊的文件类型，FIFO 即<code>first-in-first-out</code>，主要用于解决多个程序同时存取同一文件所造成的错误)</td></tr></tbody></table></li><li><p>接下来的字符3个一组，依次表示文件所有者、所属组和其他人对文件的读(r)、写(w)、执行(x)权限，没有相应权限则用<code>-</code>字符表示。如实例<code>Blog</code>文件中,所有者对文件可读可写可执行，所属组对文件可读可执行，其他人对文件可读可执行</p><img src="https://raw.githubusercontent.com/Jianghe232/tuchuang/main/Typora/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90.png" style="zoom:100%;" /></li><li><p>两个<code>root</code> ,前一个表示属主（该文件所有者）为 root，后一个表示属组为 root</p><blockquote><p>在Linux系统中，用户是按组分类的，一个用户属于一个或多个组。文件所有者以外的用户又可以分为文件所有者的同组用户和其他用户。因此，Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。</p></blockquote></li><li><p>可以使用命令<code>chown, chgrp</code> 来更改文件的属主和属组</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 添加 -R 选项表示递归修改chown [–R] 属主名 文件名chown [-R] 属主名:属组名 文件名chgrp [-R] 属组名 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="chmod：更改文件属性"><a href="#chmod：更改文件属性" class="headerlink" title="chmod：更改文件属性"></a>chmod：更改文件属性</h2><p>对于一个文件，用户可能有三种身份，文件所有者（user）、文件所属组的成员（group）、其他人（others）。用户对文件有三种权限，读(r)、写(w)、执行(x)。Linux 文件属性有两种设置方法，一种是通过数字，一种是通过符号。</p><ul><li><p>通过符号修改权限</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 给身份为 user 的用户添加对文件的执行权限chmod u+x 文件名# 删除身份为 others 的用户对文件的读权限chmod o-r 文件名# 给身份为 group 的用户添加对文件的写权限chmod g+w 文件名# 直接设定 others 的权限chmod o&#x3D;rw 文件名# 多步权限修改可以同时进行，如给user和other添加读、写权限，给group删除写权限chmod uo+rw,g-x 文件名# 当不指定具体用户或使用 a 参数，权限修改是对于所有人# 如删除所有人对文件的读权限chmod -r 文件名；等同于 chmod a-r 文件名;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="center">命令</th><th align="center">身份</th><th align="center">操作</th><th align="center">权限</th><th align="center">文件或目录</th></tr></thead><tbody><tr><td align="center"><code>chmod</code></td><td align="center">[ u  g  o  a ]</td><td align="center">[ +  -  = ]</td><td align="center">[ r  w  x ]</td><td align="center">filename</td></tr></tbody></table></li><li><p>通过数字修改权限</p><p>一个用户对文件的三种权限，与数字对应为：r = 4, w = 2, x = 1；每种身份对文件权限则是各自的三种权限相加，如：</p><p>-rwxrwx— 对应于数字时是：</p><ul><li>user = rwx = 4 + 2 + 1 = 7</li><li>group = rwx = 4 + 2 + 1 = 7</li><li>others = — = 0 + 0 + 0 = 0</li><li>所以该文件的权限数字就是 770</li></ul><p>要设置文件权限为 -rwxr-xr-x 命令为：<code>chmod 755 文件名</code> </p></li><li><p>通过<code>umask</code>命令可以设置新建文件的默认权限</p></li></ul><h2 id="特殊权限"><a href="#特殊权限" class="headerlink" title="特殊权限"></a>特殊权限</h2><h3 id="s权限-（SetUID-SetGID）"><a href="#s权限-（SetUID-SetGID）" class="headerlink" title="s权限 （SetUID,SetGID）"></a>s权限 （SetUID,SetGID）</h3><p>当可执行文件具有 S 权限时，执行文件时，将以这个文件的属主（SetUID）或属组（SetGID）身份执行。</p><ol><li><p>SetUID，对属主设置 s 权限，数字表示为 4</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chmod u+s 文件名  或  chmod 4777 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>我们利用umask知道权限的设置是四位数，后三位是ugo对应的属性，首位就是特殊位权限的表示，SetUID的权限位是4，因此可以用chmod 4777 xxx设置s权限</p></blockquote><p> <strong>例如：passwd 命令就具有 s 权限，因此普通用户能修改自己的密码</strong></p></li><li><p>SetGID, 对属组设置 s 权限，数字表示为2</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chmod g+s 文件名 或 chmod 2777 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="黏着位-t"><a href="#黏着位-t" class="headerlink" title="黏着位 t"></a>黏着位 t</h3><p>t 一般针对权限是 777 的目录文件设置，用于实现共享目录。如果文件设置了 t 权限，则只有属主有删除文件的权限。（root 除外）</p><ul><li><p>对 others 设置权限 t，数字表示为 1</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chmod o+t 文件名  或 chmod 1777 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例如：<strong>Linux中存放临时文件夹的tmp目录就有t权限</strong></p></li></ul><h2 id="chattr-设置隐藏属性"><a href="#chattr-设置隐藏属性" class="headerlink" title="chattr 设置隐藏属性"></a>chattr 设置隐藏属性</h2><p>管理 Linux 系统中的文件，除了可以设定普通权限和特殊权限外，还可以利用<code>chattr</code>命令设置文件和目录具有的一些隐藏属性。<strong>只有root用户可以使用</strong></p><ul><li><p><code>chattr</code> 命令基本格式：</p><p><code>chattr [+-=] [属性] 文件名</code></p><table><thead><tr><th align="center">属性选项</th><th>功能</th></tr></thead><tbody><tr><td align="center">i</td><td>如果对文件设置 i 属性，那么不允许对文件进行删除、改名，也不能添加和修改数据；<br/>如果对目录设置 i 属性，那么只能修改目录下文件中的数据，但不允许建立和删除文件；</td></tr><tr><td align="center">a</td><td>如果对文件设置 a 属性，那么只能在文件中増加数据，但是不能删除和修改数据；<br/>如果对目录设置 a 属性，那么只允许在目录中建立和修改文件，但是不允许删除文件；</td></tr><tr><td align="center">u</td><td>设置此属性的文件或目录，在删除时，其内容会被保存，以保证后期能够恢复，常用来防止意外删除文件或目录。</td></tr><tr><td align="center">s</td><td>和 u 相反，删除文件或目录时，会被彻底删除（直接从硬盘上删除，然后用 0 填充所占用的区域），不可恢复。</td></tr></tbody></table></li><li><p><code>lsattr</code> 查看文件隐藏权限</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;普通权限&quot;&gt;&lt;a href=&quot;#普通权限&quot; class=&quot;headerlink&quot; title=&quot;普通权限&quot;&gt;&lt;/a&gt;普通权限&lt;/h2&gt;&lt;p&gt;在 Linux 中使用 &lt;code&gt;ls -l&lt;/code&gt; 命令可以查看一个文件的属性以及所属的用户和组：&lt;/p&gt;
&lt;pr</summary>
      
    
    
    
    <category term="Linux" scheme="https://example.com/categories/Linux/"/>
    
    
    <category term="权限管理" scheme="https://example.com/tags/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>ssh连接远程服务器</title>
    <link href="https://example.com/2021/07/ssh-lian-jie-yuan-cheng-fu-wu-qi/"/>
    <id>https://example.com/2021/07/ssh-lian-jie-yuan-cheng-fu-wu-qi/</id>
    <published>2021-07-05T12:49:45.000Z</published>
    <updated>2021-07-14T13:33:26.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ssh-连接后长时间不操作自动断开"><a href="#ssh-连接后长时间不操作自动断开" class="headerlink" title="ssh 连接后长时间不操作自动断开"></a>ssh 连接后长时间不操作自动断开</h2><p>这个问题烦得很，隔一小会儿不操作，就卡死了，只能重新连接。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="1-修改服务器端参数"><a href="#1-修改服务器端参数" class="headerlink" title="1.修改服务器端参数"></a>1.修改服务器端参数</h3><p>修改服务器端配置文件：<code>/etc/ssh/sshd_config</code>，添加如下内容：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 每 60 秒向客户端发送一次保持连接的信号ClientAliveInterval    60# 设置断开时间,客户端 60 次未响应就断开连接（可选）ClientAliveCountMax    60<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-修改本地参数"><a href="#2-修改本地参数" class="headerlink" title="2.修改本地参数"></a>2.修改本地参数</h3><p>修改本地配置文件：<code>/etc/ssh/ssh_config</code> :</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 每 60 秒向服务器端发送一次保持连接的信号ServerAliveInterval    60# 60 次为响应则断开连接ServerAliveCountMax    60<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-使用-ssh-登录时设置参数"><a href="#3-使用-ssh-登录时设置参数" class="headerlink" title="3.使用 ssh 登录时设置参数"></a>3.使用 ssh 登录时设置参数</h3><p>使用<code>-o</code> 选项可以设置相应的参数</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ ssh -o ServerAliveInterval&#x3D;30 root@123.123.123<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li>[1] <a href="https://blog.csdn.net/hustcw98/article/details/79325878">Hustcw Blog</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ssh-连接后长时间不操作自动断开&quot;&gt;&lt;a href=&quot;#ssh-连接后长时间不操作自动断开&quot; class=&quot;headerlink&quot; title=&quot;ssh 连接后长时间不操作自动断开&quot;&gt;&lt;/a&gt;ssh 连接后长时间不操作自动断开&lt;/h2&gt;&lt;p&gt;这个问题烦得很，隔一</summary>
      
    
    
    
    <category term="Linux" scheme="https://example.com/categories/Linux/"/>
    
    
    <category term="ssh" scheme="https://example.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Python基础02</title>
    <link href="https://example.com/2021/07/python-ji-chu-02/"/>
    <id>https://example.com/2021/07/python-ji-chu-02/</id>
    <published>2021-07-05T05:56:20.000Z</published>
    <updated>2021-07-14T13:33:26.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h2><ul><li><p>if-else</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> 表达式<span class="token punctuation">:</span>    do this<span class="token keyword">else</span><span class="token punctuation">:</span>    do this<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>表达式为真，程序执行缩进后的内容。为假，执行 else 后缩进的内容。</p><blockquote><p>Python 中缩进也属于语法</p></blockquote></li></ul><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><ul><li><p>while</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> 表达式<span class="token punctuation">:</span>    内容<span class="token number">1</span>    内容<span class="token number">2</span>    cont<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>表达式为真，循环。</p></li><li><p>退出循环</p><ul><li>break 完全退出</li><li>continue 跳过本次循环</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;控制流&quot;&gt;&lt;a href=&quot;#控制流&quot; class=&quot;headerlink&quot; title=&quot;控制流&quot;&gt;&lt;/a&gt;控制流&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;if-else&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-python&quot; dat</summary>
      
    
    
    
    <category term="Python" scheme="https://example.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python基础01</title>
    <link href="https://example.com/2021/07/python-ji-chu-01/"/>
    <id>https://example.com/2021/07/python-ji-chu-01/</id>
    <published>2021-07-04T04:06:03.000Z</published>
    <updated>2021-07-14T13:33:26.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代码风格建议"><a href="#代码风格建议" class="headerlink" title="代码风格建议"></a>代码风格建议</h2><ol><li>使用4个空格缩进</li><li>不要混用空格和制表符</li><li>函数之间空一行</li><li>类之间空两行</li><li>字典，列表，元组以及参数列表中，在<code>，</code>和<code>:</code>后面添加一个空格</li><li>在赋值运算符和比较运算符周围要有空格 （参数列表中除外）:<code>a = f(1, 2) + g(3, 4)</code></li></ol><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><pre class="line-numbers language-none"><code class="language-none"># FIXME -- fix these code later# TODO -- in future you have to do this<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><p>模块是包含我们能复用的代码的文件，包含了不同的函数定义，变量。通常以<code>.py</code>为扩展名。Python 在默认安装时就带有大量的模块。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> math<span class="token comment">#导入 math 模块</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="变量和数据类型"><a href="#变量和数据类型" class="headerlink" title="变量和数据类型"></a>变量和数据类型</h2><ul><li><p>Python 中不需要为变量指定数据类型</p><p>a = 1 它就是整型；a = 1.1 它就是浮点型；a = “1231” 它就是字符串</p></li><li><p>类型转换</p><p>手动类型转换</p><table><thead><tr><th align="center">类型转换函数</th><th align="center">转换路径</th></tr></thead><tbody><tr><td align="center">float(string)</td><td align="center">字符串-&gt;浮点值</td></tr><tr><td align="center">int(string)</td><td align="center">字符串-&gt;整数值</td></tr><tr><td align="center">str(int)</td><td align="center">整数值-&gt;字符串</td></tr><tr><td align="center">str(float)</td><td align="center">浮点值-&gt;字符串</td></tr></tbody></table></li><li><p>关键字和标识符</p><pre class="line-numbers language-none"><code class="language-none">False               def                 if                  raiseNone                del                 import              returnTrue                elif                in                  tryand                 else                is                  whileas                  except              lambda              withassert              finally             nonlocal            yieldbreak               for                 notclass               from                orcontinue            global              pass<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>单行定义多个变量或赋值</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token number">45</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token number">54</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a  <span class="token comment">## 利用此技巧交换两个变量的值</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token number">54</span><span class="token operator">>></span><span class="token operator">></span> b<span class="token number">45</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>利用了 <strong>元组</strong> 这个数据类型。我们是用逗号创建元组。在赋值语句的右边我们创建了一个元组，我们称这为元组封装（_tuple packing_），赋值语句的左边我们则做的是元组拆封 （_tuple unpacking_）。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"shiyanlou"</span><span class="token punctuation">,</span> <span class="token string">"China"</span><span class="token punctuation">,</span> <span class="token string">"Python"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> name<span class="token punctuation">,</span> country<span class="token punctuation">,</span> language <span class="token operator">=</span> data<span class="token operator">>></span><span class="token operator">></span> name<span class="token string">'shiyanlou'</span><span class="token operator">>></span><span class="token operator">></span> country<span class="token string">'China'</span><span class="token operator">>></span><span class="token operator">></span> language<span class="token string">'Python'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ol><li><p>算数运算符</p><table><thead><tr><th align="center">Operator</th><th align="center">Meaning</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加</td></tr><tr><td align="center">-</td><td align="center">减</td></tr><tr><td align="center">*</td><td align="center">乘</td></tr><tr><td align="center">/</td><td align="center">除</td></tr><tr><td align="center">%</td><td align="center">取余</td></tr><tr><td align="center">//</td><td align="center">取整</td></tr><tr><td align="center">**</td><td align="center">幂</td></tr></tbody></table></li><li><p>比较运算符(关系运算符)</p><table><thead><tr><th align="center">Operator</th><th align="center">Meaning</th></tr></thead><tbody><tr><td align="center">&lt;</td><td align="center">小于</td></tr><tr><td align="center">&lt;=</td><td align="center">小于等于</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&gt;=</td><td align="center">大于等于</td></tr><tr><td align="center">==</td><td align="center">等于</td></tr><tr><td align="center">!=</td><td align="center">不等于</td></tr></tbody></table></li><li><p>逻辑运算符</p><table><thead><tr><th align="center">Operator</th><th align="center">Meaning</th></tr></thead><tbody><tr><td align="center">and</td><td align="center">与</td></tr><tr><td align="center">or</td><td align="center">或</td></tr><tr><td align="center">not</td><td align="center">非</td></tr></tbody></table><ul><li>and, or 也称作短路运算符：参数从左向右解析，一旦结果确定就停止。</li><li>三者中 not 优先级最高，其次 and</li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;代码风格建议&quot;&gt;&lt;a href=&quot;#代码风格建议&quot; class=&quot;headerlink&quot; title=&quot;代码风格建议&quot;&gt;&lt;/a&gt;代码风格建议&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;使用4个空格缩进&lt;/li&gt;
&lt;li&gt;不要混用空格和制表符&lt;/li&gt;
&lt;li&gt;函数之间空一行&lt;/l</summary>
      
    
    
    
    <category term="Python" scheme="https://example.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>万事开头难</title>
    <link href="https://example.com/2021/05/wan-shi-kai-tou-nan/"/>
    <id>https://example.com/2021/05/wan-shi-kai-tou-nan/</id>
    <published>2021-05-20T22:10:10.000Z</published>
    <updated>2021-07-14T13:33:26.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="万事开头难"><a href="#万事开头难" class="headerlink" title="万事开头难"></a>万事开头难</h2><p>一直以来都有想搭建个人博客，期间也搭建过几次，但最后都放弃了。这次是最<br>成功的一次，从头到尾完整的把它给搭建出来，修改成自己满意的样子，然后配<br>置好域名。虽然又是一个通宵，还是挺快乐的。总算是有了个好的开始。</p><h2 id="为什么想写博客"><a href="#为什么想写博客" class="headerlink" title="为什么想写博客"></a>为什么想写博客</h2><ol><li>没人监督，没人鼓励，或许博客不失为一种替代的方式；</li><li>记录自己的成长过程，不至于将来回忆的时候脑子一片空白；</li><li>一种有效的学习方式；</li><li>方便自己，不至于每次遇到同样的问题还得到处查资料；</li><li>也许某一天，我的一篇文章恰好能帮到某个需要的人。</li></ol><h2 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h2><p>接下来我想记录自己的shell学习历程，以及记录使用linux系统时遇到的问题。<br>其实，我之前零零总总也写过很多篇markdown，但是我喜欢刷机，电脑、手机都<br>刷，结果备份来备份去，都给备份没了。这呢，算是正式发出的第一篇，希望不<br>会是最后一篇(此处不应有句号)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;万事开头难&quot;&gt;&lt;a href=&quot;#万事开头难&quot; class=&quot;headerlink&quot; title=&quot;万事开头难&quot;&gt;&lt;/a&gt;万事开头难&lt;/h2&gt;&lt;p&gt;一直以来都有想搭建个人博客，期间也搭建过几次，但最后都放弃了。这次是最&lt;br&gt;成功的一次，从头到尾完整的把它给搭建出</summary>
      
    
    
    
    <category term="随笔" scheme="https://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
</feed>
